"""Fix circular import issue

Revision ID: ec728c8305f0
Revises: b926ea9b712b
Create Date: 2025-02-10 16:16:09.616766

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ec728c8305f0'
down_revision = 'b926ea9b712b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('donation')
    op.drop_table('recurring_donation')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('recurring_donation',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('donor_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('charity_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('amount', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('currency', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('billing_day', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_charged', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('next_charge', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('stripe_subscription_id', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['charity_id'], ['charity.id'], name='recurring_donation_charity_id_fkey'),
    sa.ForeignKeyConstraint(['donor_id'], ['user.id'], name='recurring_donation_donor_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='recurring_donation_pkey')
    )
    op.create_table('donation',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('donor_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('charity_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('amount', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('currency', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('is_anonymous', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_recurring', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('recurring_day', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('payment_status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('payment_method', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('stripe_payment_intent', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['charity_id'], ['charity.id'], name='donation_charity_id_fkey'),
    sa.ForeignKeyConstraint(['donor_id'], ['user.id'], name='donation_donor_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='donation_pkey')
    )
    # ### end Alembic commands ###
